From 393a3143f102cdf998a9159e384be8eaea5b217b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ng=C3=B4=20Minh=20Quang?= <ngoquang2708@gmail.com>
Date: Tue, 30 Aug 2016 18:07:00 +0700
Subject: [PATCH 1/3] Allow custom RIL to define the way it stores telephony
 properties.

In multisim configuration, some RIL implementations do not store property
values of a property in a array. Instead, they store these values in separate
property name that have difference suffix corresponding to each phoneId.

Change-Id: I7929ecf0ab79ef6cc6294eb96f2fa16b61e8087f
---
 .../java/android/telephony/TelephonyManager.java   | 144 ++++++++++++++-------
 1 file changed, 94 insertions(+), 50 deletions(-)

diff --git a/telephony/java/android/telephony/TelephonyManager.java b/telephony/java/android/telephony/TelephonyManager.java
index 5ec6950d79930..255f5a6367738 100644
--- a/telephony/java/android/telephony/TelephonyManager.java
+++ b/telephony/java/android/telephony/TelephonyManager.java
@@ -93,6 +93,16 @@
         static final int NEVER_USE = 2;
     }
 
+    /**
+     * Allow custom RIL to define the way it stores telephony properties.
+     **/
+    /** @hide */
+    public interface TelephonyPropertyProvider {
+        void setTelephonyProperty(int phoneId, String property, String value);
+        String getTelephonyProperty(int phoneId, String property, String defaultVal);
+    }
+    private static final TelephonyPropertyProvider sTelephonyProvider = instantiateTelephonyPropertyProvider();
+
     private final Context mContext;
     private SubscriptionManager mSubscriptionManager;
 
@@ -3385,49 +3395,7 @@ public int getDefaultSim() {
      * @hide
      */
     public static void setTelephonyProperty(int phoneId, String property, String value) {
-        String propVal = "";
-        String p[] = null;
-        String prop = SystemProperties.get(property);
-
-        if (value == null) {
-            value = "";
-        }
-
-        if (prop != null) {
-            p = prop.split(",");
-        }
-
-        if (!SubscriptionManager.isValidPhoneId(phoneId)) {
-            Rlog.d(TAG, "setTelephonyProperty: invalid phoneId=" + phoneId +
-                    " property=" + property + " value: " + value + " prop=" + prop);
-            return;
-        }
-
-        for (int i = 0; i < phoneId; i++) {
-            String str = "";
-            if ((p != null) && (i < p.length)) {
-                str = p[i];
-            }
-            propVal = propVal + str + ",";
-        }
-
-        propVal = propVal + value;
-        if (p != null) {
-            for (int i = phoneId + 1; i < p.length; i++) {
-                propVal = propVal + "," + p[i];
-            }
-        }
-
-        if (property.length() > SystemProperties.PROP_NAME_MAX
-                || propVal.length() > SystemProperties.PROP_VALUE_MAX) {
-            Rlog.d(TAG, "setTelephonyProperty: property to long phoneId=" + phoneId +
-                    " property=" + property + " value: " + value + " propVal=" + propVal);
-            return;
-        }
-
-        Rlog.d(TAG, "setTelephonyProperty: success phoneId=" + phoneId +
-                " property=" + property + " value: " + value + " propVal=" + propVal);
-        SystemProperties.set(property, propVal);
+        sTelephonyProvider.setTelephonyProperty(phoneId, property, value);
     }
 
     /**
@@ -3524,15 +3492,91 @@ public static boolean putIntAtIndex(android.content.ContentResolver cr,
      * @hide
      */
     public static String getTelephonyProperty(int phoneId, String property, String defaultVal) {
-        String propVal = null;
-        String prop = SystemProperties.get(property);
-        if ((prop != null) && (prop.length() > 0)) {
-            String values[] = prop.split(",");
-            if ((phoneId >= 0) && (phoneId < values.length) && (values[phoneId] != null)) {
-                propVal = values[phoneId];
+        return sTelephonyProvider.getTelephonyProperty(phoneId, property, defaultVal);
+    }
+
+    private static class DefaultTelephonyPropertyProvider implements TelephonyPropertyProvider {
+
+        public DefaultTelephonyPropertyProvider() { }
+
+        @Override
+        public void setTelephonyProperty(int phoneId, String property, String value) {
+            String propVal = "";
+            String p[] = null;
+            String prop = SystemProperties.get(property);
+
+            if (value == null) {
+                value = "";
+            }
+
+            if (prop != null) {
+                p = prop.split(",");
+            }
+
+            if (!SubscriptionManager.isValidPhoneId(phoneId)) {
+                Rlog.d(TAG, "setTelephonyProperty: invalid phoneId=" + phoneId +
+                        " property=" + property + " value: " + value + " prop=" + prop);
+                return;
+            }
+
+            for (int i = 0; i < phoneId; i++) {
+                String str = "";
+                if ((p != null) && (i < p.length)) {
+                    str = p[i];
+                }
+                propVal = propVal + str + ",";
+            }
+
+            propVal = propVal + value;
+            if (p != null) {
+                for (int i = phoneId + 1; i < p.length; i++) {
+                    propVal = propVal + "," + p[i];
+                }
+            }
+
+            if (property.length() > SystemProperties.PROP_NAME_MAX
+                    || propVal.length() > SystemProperties.PROP_VALUE_MAX) {
+                Rlog.d(TAG, "setTelephonyProperty: property to long phoneId=" + phoneId +
+                        " property=" + property + " value: " + value + " propVal=" + propVal);
+                return;
+            }
+
+            Rlog.d(TAG, "setTelephonyProperty: success phoneId=" + phoneId +
+                    " property=" + property + " value: " + value + " propVal=" + propVal);
+            SystemProperties.set(property, propVal);
+        }
+
+        @Override
+        public String getTelephonyProperty(int phoneId, String property, String defaultVal) {
+            String propVal = null;
+            String prop = SystemProperties.get(property);
+            if ((prop != null) && (prop.length() > 0)) {
+                String values[] = prop.split(",");
+                if ((phoneId >= 0) && (phoneId < values.length) && (values[phoneId] != null)) {
+                    propVal = values[phoneId];
+                }
+            }
+            return propVal == null ? defaultVal : propVal;
+        }
+    }
+
+    private static TelephonyPropertyProvider instantiateTelephonyPropertyProvider() {
+        String classSimpleName = SystemProperties.get("ro.telephony.prop_class").trim();
+        TelephonyPropertyProvider result;
+        if (classSimpleName.isEmpty())
+            result = new DefaultTelephonyPropertyProvider();
+        else {
+            try {
+                result = (TelephonyPropertyProvider) Class
+                        .forName("com.android.internal.telephony." + classSimpleName)
+                        .newInstance();
+            } catch (Exception e) {
+                Rlog.e(TAG, "Unable to construct custom TelephonyPropertyProvider class", e);
+                Rlog.e(TAG, "Fallback to DefaultTelephonyPropertyProvider");
+                result = new DefaultTelephonyPropertyProvider();
             }
         }
-        return propVal == null ? defaultVal : propVal;
+        return result;
     }
 
     /** @hide */
